bilans <- page %>%
html_nodes(".center~ td.center") %>%
html_text()
WL <- substr(bilans,1,1)
# Chunk 22
RS <- data.frame(Date, Team, WL, MIN, PTS, FG, FGA, TP, TPA, FT, FTA, REB, AST, STL, BLK, TO, PF, PM)
# Chunk 23
##Zawodnicy - steals
strona2 <- read_html(url3)
Zawodnicy <- strona %>%
html_nodes(".a-top .left:nth-child(1)") %>%
html_text() %>%
parse_integer()
# Chunk 24: tbl-RS
#| label: tbl-RS
#| tbl-cap: Pierwsze 10 wierszy tabeli statystyk z Sezonu Regularnego
#|
head(RS,n=10) %>%
kbl(align="c",escape = F) %>%
kable_styling(bootstrap_options=c("striped", "hover","condensed","bordered"), full_width = T, position = "center") %>%
column_spec(2, image =spec_image(c("BOS.png","76ers.png","SAS.png","ORL.png","ATL.png","NJN.png","CLE.png","WAS.png","CHH.png","CLE.png"),70,70)) %>%
column_spec(3,
color =ifelse(WL=="W","#01fd21","red"),bold=T) %>%
scroll_box(height = "500px")
# Chunk 25: tbl-MinSummary
#| label: tbl-MinSummary
#| tbl-cap: Podsumowanie minut spędzonych na boisku
RS %>%
summarise("Minimalny czas"=min(MIN),
"Średni czas"=round(mean(MIN), digits=2),
"Suma"=sum(MIN),
"Maksymalny czas"=max(MIN)) %>%
kbl(align = "c") %>%
kable_styling(bootstrap_options=c("striped", "hover","condensed","bordered"), full_width = F, position = "center")
# Chunk 26: tbl-MinMaxMinutes
#| label: tbl-MinMaxMinutes
#| tbl-cap: Mecze z największą i najmniejszą ilością rozegranych minut
RS %>%
arrange(-MIN) %>%
filter(row_number()==1 | row_number()== n()) %>%
select(c(1,2,3,4)) %>%
mutate(MIN=color_bar("red")(MIN)) %>%
rename(" Data "="Date",
" Dryżyna "="Team",
" Rezultat meczu "="WL",
"Minuty"="MIN") %>%
kbl(align = "c",escape=F) %>%
kable_styling(bootstrap_options=c("striped", "hover","condensed","bordered"), full_width = F, position = "center") %>%
column_spec(2, image =spec_image(c("LAC.png","76ers.png"),70,70))%>%
column_spec(3,
color ="#01fd21",bold=T) %>%
column_spec(4,
color ="white",bold=T)
# Chunk 27: fig-MintoDate
#| label: fig-MintoDate
#| fig-cap: ilośc minut spędzonych na parkiecie podczas rozegranych meczy na przestrzeni całego sezonu
RS %>%
ggplot(aes(x=Date,y=MIN,group=1))+
geom_line(size=1)+
geom_point(shape=21, size=4,aes(fill=after_stat(y>38.88)))+
geom_hline(yintercept=mean(MIN),col='red',alpha=0.6,size=1.25, linetype='dashed')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size = 13))+
labs(y="Minuty",
x="Data meczu",
fill="Ilość minut ponad średnią")+
scale_fill_manual(
values = c("red", "black"),
labels=c("Nie","Tak")
)+
theme(legend.position = "top")+
theme(legend.title = element_text(size = 20),
legend.text = element_text(size = 20),
axis.title = element_text(size = 20))
# Chunk 28: tbl-PtsSummary
#| label: tbl-PtsSummary
#| tbl-cap: Podsumowanie rzuconych punktów
RS %>%
summarise("Min"=min(PTS),
"Średnia"=round(mean(PTS), digits=2),
"Suma"=sum(PTS),
"Max"=max(PTS)) %>%
kbl(align = "c") %>%
kable_styling(bootstrap_options=c("striped", "hover","condensed","bordered"), full_width = F, position = "center")
# Chunk 29
x <- RS %>%
filter(PTS>25) %>%
summarise("MoreT25"=n())
# Chunk 30: fig-Morethan25
#| label: fig-Morethan25
#| fig-cap: Ilość meczy, podczas których MJ zdobył więcej niż 25 punktów
RS %>%
group_by(WL,PTS>25) %>%
summarise("MoreT25"=n()) %>%
ggplot(aes(WL, MoreT25, fill=factor(`PTS > 25`))) +
geom_col(position = "dodge", colour = "white")+
labs(y="Ilość meczy",
x="Rezultat meczu \n\n L - Przegrana    W - Wygrana  ",
fill="Zdobycz punktowa większa niż 25")+
scale_fill_manual(
values = c("#CE1141", "#000000"),
labels=c("Nie","Tak"))+
geom_text(aes(label=MoreT25),
position = position_dodge(width = 0.9),
vjust = -0.3)
# Chunk 31
TypesofPTS <- RS %>%
summarise("OnePTS"=sum(FT),
"TwoPTS"=(sum(PTS)-sum(FT)-(sum(TP)*3)),
"ThreePTS"=(sum(TP)*3))
TypesofPTS_df <- data.frame(
group=c("Punkty zdobyte z rzutuów osobistych","Punkty zdobyte z półdystansu","Punkty zdobyte zza lini 3 punktów"),
value=c(TypesofPTS$OnePTS,TypesofPTS$TwoPTS,TypesofPTS$ThreePTS)
)
#| label: fig-TypeofPTS
#| fig-cap: Suma punktów zdobytych z rzutów osobistych, półdystansu i zza linii 7.24
ggplot(TypesofPTS_df, aes(x="", y=value, fill=group)) +
geom_bar(stat="identity", width=1.5, color="black") +
coord_polar("y", start=0) +
theme_void()+
labs(fill="")+
scale_fill_manual(values=c("#CE1141","#000000","#FFFFFF"))+
geom_text(aes(label = value),
position = position_stack(vjust = 0.5),
color=ifelse(TypesofPTS_df$value==90,"black","white"))
Per_Osobiste <- RS %>%
summarise("Trafione"=percent(sum(FT)/sum(FTA)),
"Nietrafione"=percent(1-(sum(FT)/sum(FTA))))
Per_Osobiste_df <- data.frame(
group=c("Trafione","Nietrafione"),
value=c(Per_Osobiste$Trafione,Per_Osobiste$Nietrafione)
)
MeanofFT <- RS %>%
summarise("Średnia rzutóW osobistych na mecz"=round(sum(FTA)/82,digits = 2))
#| label: fig-PercentFT
#| fig-cap: Skuteczność rzutów osobistych
ggplot(Per_Osobiste_df, aes(x="", y=value, fill=group)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()+
labs(fill="")+
scale_fill_manual(values=c("#CE1141","#000000"))+
geom_text(aes(label = value),
position = position_stack(vjust = 0.5),
color="white")
set.seed(2022)
graf <- sample_bipartite(n1=lk,n2=lp,type="gnp",p=0.3)
plot(graf,layout=layout_as_bipartite)
library(ggplot2)
library(plotly)
library(scales)
library(ggplot2)
library(plotly)
library(scales)
library(tidyverse)
iris %>%
ggplot(aes(x=Sepal.Length,y=Sepal.Width))+
geom_point()
iris %>%
ggplot(aes(x=Sepal.Length,y=Sepal.Width, color = Species))+
geom_point()
iris %>%
ggplot(aes(x=Sepal.Length,y=Sepal.Width, color = Species))+
geom_point()+
geom_smooth(method = lm, se = r)
iris %>%
ggplot(aes(x=Sepal.Length,y=Sepal.Width, color = Species))+
geom_point()+
geom_smooth(method = lm, se = F)
iris %>%
ggplot(aes(x=Sepal.Length,y=Sepal.Width, color = Species))+
geom_point()+
geom_smooth(method = lm, se = F, fullrange = T)
iris %>%
ggplot(aes(x=Sepal.Length,y=Sepal.Width, color = Species))+
geom_point()+
geom_smooth(method = lm, se = F, fullrange = T)+
labs( x = "Długość kielicha", y = "Szerokość kielicha", color = " Gatunek")
iris %>%
plot_ly(x = ~Sepal.Length, y = ~Sepal.Width, color = ~Species)
p <-  iris %>%
ggplot(aes(x=Sepal.Length,y=Sepal.Width, color = Species))+
geom_point()+
geom_smooth(method = lm, se = F, fullrange = T)+
labs( x = "Długość kielicha", y = "Szerokość kielicha", color = " Gatunek")
ggplotly(p)
diamonds %>%
ggplot(aes(x=carat,y=price))+
geom_point()
diamonds %>%
ggplot(aes(x=carat,y=price))+
geom_point(alpha=0.01)
diamonds %>%
ggplot(aes(x=carat, y = price))+
geom_hex()
diamonds %>%
ggplot(aes(x=carat, y = price))+
geom_bin2d()
diamonds %>%
ggplot(aes(x=carat, y = price))+
geom_bin2d(bins=10)
starwars %>%
ggplot(aes(gender))+
geom_bar()
starwars %>%
drop(NA) %>%
ggplot(aes(gender))+
geom_bar()
starwars %>%
drop_na() %>%
ggplot(aes(gender))+
geom_bar()
starwars %>%
drop_na() %>%
ggplot(aes(gender))+
geom_bar()+
geom_text(labels = gender)
starwars %>%
drop_na() %>%
ggplot(aes(gender))+
geom_bar()+
geom_text()
starwars %>%
drop_na() %>%
ggplot(aes(gender))+
geom_bar()+
geom_text(aes(labels = gender))
starwars %>%
drop_na() %>%
ggplot(aes(gender))+
geom_bar()+
geom_text(aes(label = gender))
starwars %>%
drop_na() %>%
ggplot(aes(gender))+
geom_bar()+
geom_text(stat=count,aes(label = gender))
starwars %>%
drop_na() %>%
ggplot(aes(gender))+
geom_bar()+
geom_text(stat="count",aes(label = gender))
starwars %>%
count(species) %>%
drop_na() %>%
ggplot(aes(species,y=n))+
geom_bar(stat = "identity")
starwars %>%
count(species) %>%
drop_na() %>%
ggplot(aes(species,y=n))+
geom_bar(stat = "identity")+
coord_flip()
starwars %>%
count(species) %>%
drop_na() %>%
ggplot(aes(species,y=n))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 90) )
starwars %>%
count(species) %>%
drop_na() %>%
ggplot(aes(fct_reorder(species,-n),y=n))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 90) )
starwars %>%
count(species) %>%
drop_na() %>%
ggplot(aes(fct_reorder(species,-n),y=n))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 90) )+
scale_fill_manual(values = ice_pal(nrow(dt)))
starwars %>%
count(species) %>%
drop_na() %>%
ggplot(aes(fct_reorder(species,-n),y=n))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 90) )+
scale_fill_manual(values = stt_pal(nrow(dt)))
# Chunk 1
##Wczytanie bibliotek
library(tidyverse)
library(rvest)
library(tidyr)
library(knitr)
library(kableExtra)
library(formattable)
library(gtsummary)
library(ggplot2)
library(cowplot)
library(ggthemes)
library(repr)
library(scales)
# Chunk 2
##Url
url <- "https://www.landofbasketball.com/nba_players_game_logs/1998/michael_jordan_full.htm"
url2 <- "https://www.basketball-reference.com/players/j/jordami01/gamelog/1998#pgl_basic"
url3 <- "https://www.landofbasketball.com/year_by_year_stats/1997_1998_leaders_steals_tot_rs.htm"
# Chunk 3
##Wczytywanie danych z sezonu regularnego
page <- read_html(url2)
PTS <- page %>%
html_nodes(".right:nth-child(28)") %>%
html_text() %>%
as.integer()
# Chunk 4
##Minuty z bb-references z sekundami
MIN <- page %>%
html_nodes(".right:nth-child(10)") %>%
html_text()
# Chunk 5
##Minuty pełne z landofabsketball
strona <- read_html(url)
MIN <- strona %>%
html_nodes(".a-top td:nth-child(5)") %>%    html_text()
MIN <- as.integer(MIN[2:83])
# Chunk 6
FG<- page %>%
html_nodes(".right:nth-child(11)") %>%
html_text() %>%
as.integer()
# Chunk 7
FGA<- page %>%
html_nodes(".right:nth-child(12)") %>%
html_text() %>%
as.integer()
# Chunk 8
TP <- page %>%
html_nodes(".right:nth-child(14)") %>%
html_text() %>%
as.integer()
# Chunk 9
TPA <- page %>%
html_nodes(".right:nth-child(15)") %>%
html_text() %>%
as.integer()
# Chunk 10
FT <- page %>%
html_nodes(".right:nth-child(17)") %>%
html_text() %>%
as.integer()
# Chunk 11
FTA <- page %>%
html_nodes(".right:nth-child(18)") %>%
html_text() %>%
as.integer()
# Chunk 12
REB <- page %>%
html_nodes(".right:nth-child(22)") %>%
html_text() %>%
as.integer()
# Chunk 13
AST <- page %>%
html_nodes(".right:nth-child(23)") %>%
html_text() %>%
as.integer()
# Chunk 14
STL <- page %>%
html_nodes(".right:nth-child(24)") %>%
html_text() %>%
as.integer()
# Chunk 15
BLK <- page %>%
html_nodes(".right:nth-child(25)") %>%
html_text() %>%
as.integer()
# Chunk 16
TO <- page %>%
html_nodes(".right:nth-child(26)") %>%
html_text() %>%
as.integer()
# Chunk 17
PF <- page %>%
html_nodes(".right:nth-child(27)") %>%
html_text() %>%
as.integer()
# Chunk 18
PM <- page %>%
html_nodes("td:nth-child(30)") %>%
html_text() %>%
as.integer()
# Chunk 19
"Date" <- page %>%
html_nodes(".tooltip+ .left a") %>%
html_text()
# Chunk 20
"Team" <- page %>%
html_nodes(".center+ .left a") %>%
html_text()
# Chunk 21
bilans <- page %>%
html_nodes(".center~ td.center") %>%
html_text()
WL <- substr(bilans,1,1)
# Chunk 22
RS <- data.frame(Date, Team, WL, MIN, PTS, FG, FGA, TP, TPA, FT, FTA, REB, AST, STL, BLK, TO, PF, PM)
# Chunk 23
##Zawodnicy - steals
strona2 <- read_html(url3)
Zawodnicy <- strona %>%
html_nodes(".a-top .left:nth-child(1)") %>%
html_text() %>%
parse_integer()
# Chunk 24: tbl-RS
#| label: tbl-RS
#| tbl-cap: Pierwsze 10 wierszy tabeli statystyk z Sezonu Regularnego
#|
head(RS,n=10) %>%
kbl(align="c",escape = F) %>%
kable_styling(bootstrap_options=c("striped", "hover","condensed","bordered"), full_width = T, position = "center") %>%
column_spec(2, image =spec_image(c("BOS.png","76ers.png","SAS.png","ORL.png","ATL.png","NJN.png","CLE.png","WAS.png","CHH.png","CLE.png"),70,70)) %>%
column_spec(3,
color =ifelse(WL=="W","#01fd21","red"),bold=T) %>%
scroll_box(height = "500px")
# Chunk 25: tbl-MinSummary
#| label: tbl-MinSummary
#| tbl-cap: Podsumowanie minut spędzonych na boisku
RS %>%
summarise("Minimalny czas"=min(MIN),
"Średni czas"=round(mean(MIN), digits=2),
"Suma"=sum(MIN),
"Maksymalny czas"=max(MIN)) %>%
kbl(align = "c") %>%
kable_styling(bootstrap_options=c("striped", "hover","condensed","bordered"), full_width = F, position = "center")
# Chunk 26: tbl-MinMaxMinutes
#| label: tbl-MinMaxMinutes
#| tbl-cap: Mecze z największą i najmniejszą ilością rozegranych minut
RS %>%
arrange(-MIN) %>%
filter(row_number()==1 | row_number()== n()) %>%
select(c(1,2,3,4)) %>%
mutate(MIN=color_bar("red")(MIN)) %>%
rename(" Data "="Date",
" Dryżyna "="Team",
" Rezultat meczu "="WL",
"Minuty"="MIN") %>%
kbl(align = "c",escape=F) %>%
kable_styling(bootstrap_options=c("striped", "hover","condensed","bordered"), full_width = F, position = "center") %>%
column_spec(2, image =spec_image(c("LAC.png","76ers.png"),70,70))%>%
column_spec(3,
color ="#01fd21",bold=T) %>%
column_spec(4,
color ="white",bold=T)
#| label: fig-MintoDate
#| fig-cap: ilośc minut spędzonych na parkiecie podczas rozegranych meczy na przestrzeni całego sezonu
RS %>%
ggplot(aes(x=Date,y=MIN,group=1))+
geom_line(size=1)+
geom_point(shape=21, size=4,aes(fill=after_stat(y>38.88)))+
geom_hline(yintercept=mean(MIN),col='red',alpha=0.6,size=1.25, linetype='dashed')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size = 13))+
labs(y="Minuty",
x="Data meczu",
fill="Ilość minut ponad średnią")+
scale_fill_manual(
values = c("red", "black"),
labels=c("Nie","Tak")
)+
theme(legend.position = "top")+
theme(legend.title = element_text(size = 20),
legend.text = element_text(size = 20),
axis.title = element_text(size = 20))
#| label: fig-MintoDate
#| fig-cap: ilośc minut spędzonych na parkiecie podczas rozegranych meczy na przestrzeni całego sezonu
RS %>%
ggplot(aes(x=Date,y=MIN,group=1))+
geom_line(size=1)+
geom_point(shape=21, size=4,aes(fill=after_stat(WL=="W")))+
geom_hline(yintercept=mean(MIN),col='red',alpha=0.6,size=1.25, linetype='dashed')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size = 13))+
labs(y="Minuty",
x="Data meczu",
fill="Ilość minut ponad średnią")+
scale_fill_manual(
values = c("red", "black"),
labels=c("Nie","Tak")
)+
theme(legend.position = "top")+
theme(legend.title = element_text(size = 20),
legend.text = element_text(size = 20),
axis.title = element_text(size = 20))
#| label: fig-MintoDate
#| fig-cap: ilośc minut spędzonych na parkiecie podczas rozegranych meczy na przestrzeni całego sezonu
RS %>%
ggplot(aes(x=Date,y=MIN,group=1))+
geom_line(size=1)+
geom_point(shape=21, size=4,aes(fill=after_stat(WL=="W")))+
geom_hline(yintercept=mean(MIN),col='red',alpha=0.6,size=1.25, linetype='dashed')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size = 13))+
labs(y="Minuty",
x="Data meczu",
fill="")+
scale_fill_manual(
values = c("red", "#01fd21"),
labels=c("Przegrana","Wygrana")
)+
theme(legend.position = "top")+
theme(legend.title = element_text(size = 20),
legend.text = element_text(size = 20),
axis.title = element_text(size = 20))
##Wczytanie bibliotek
library(tidyverse)
library(rvest)
library(tidyr)
library(knitr)
library(kableExtra)
library(formattable)
library(gtsummary)
library(ggplot2)
library(cowplot)
library(ggthemes)
library(repr)
library(scales)
